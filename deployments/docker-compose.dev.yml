version: '3.8'

services:
  app:
    image: books-api-dev:latest
    build:
      context: ..
      dockerfile: deployments/docker/Dockerfile.dev
    container_name: books-api-dev
    ports:
      - "8080:8080"
    volumes:
      - ..:/app
      - go-modules:/go/pkg/mod
    environment:
      - GIN_MODE=debug
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=books_db
      - DB_SSL_MODE=disable
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - KAFKA_BROKERS=kafka:9092
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      kafka:
        condition: service_healthy
    networks:
      - books-network

  postgres:
    image: postgres:16-alpine
    container_name: books-postgres-dev
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=books_db
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - books-network

  redis:
    image: redis:7-alpine
    container_name: books-redis-dev
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    volumes:
      - redis-data:/data
    networks:
      - books-network

  kafka:
    image: bitnami/kafka:latest
    container_name: books-kafka-dev
    ports:
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka-data:/bitnami/kafka
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics.sh --bootstrap-server=localhost:9092 --list"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - books-network

networks:
  books-network:
    driver: bridge

volumes:
  postgres-data:
  redis-data:
  kafka-data:
  go-modules: